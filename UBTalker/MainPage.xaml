<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="UBTalker.MainPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    IsTabStop="false"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:UBTalker"
    xmlns:common="using:UBTalker.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>

        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        <x:String x:Key="AppName">UB Talker</x:String>
        <local:StringToColorConverter x:Key="ColorConverter"/>
        <local:StringToImageConverter x:Key="ImageConverter"/>
        <local:BoolToVisibilityConverter x:Key="BoolConverter" />

        <Style x:Key="LargerAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
            <Setter Property="AutomationProperties.AutomationId" Value="LargerAppBarButtonStyle"/>
            <Setter Property="AutomationProperties.Name" Value="Larger"/>
            <Setter Property="Content" Value="&#xE140;"/>
        </Style>
        <Style x:Key="SmallerAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
            <Setter Property="AutomationProperties.AutomationId" Value="SmallerAppBarButtonStyle"/>
            <Setter Property="AutomationProperties.Name" Value="Smaller"/>
            <Setter Property="Content" Value="&#xE13F;"/>
        </Style>
        <Style x:Key="NewFolderAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
            <Setter Property="AutomationProperties.AutomationId" Value="NewFolderAppBarButtonStyle"/>
            <Setter Property="AutomationProperties.Name" Value="New Category"/>
            <Setter Property="Content" Value="&#xE1DA;"/>
        </Style>
        <Style x:Key="AddButtonAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AddAppBarButtonStyle}">
            <Setter Property="AutomationProperties.AutomationId" Value="AddButtonAppBarButtonStyle"/>
            <Setter Property="AutomationProperties.Name" Value="New Button"/>
        </Style>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="15"/>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{StaticResource AppName}" Style="{StaticResource PageHeaderTextStyle}"/>
            <MediaElement x:Name="SpeechMediaElement"></MediaElement>
        </Grid>

        <Grid Grid.Row="1" >
            <ProgressBar IsIndeterminate="True" HorizontalAlignment="Stretch" x:Name="WaitProgressBar" VerticalAlignment="Top" Visibility="Collapsed"/>
        </Grid>

        <local:MyGridView x:Name="DynamicGrid" Margin="10,10,10,10" IsItemClickEnabled="True"
                          SelectionChanged="Item_Deselected" ItemClick="ItemView_ItemClick"
                          ItemsSource="{Binding}" AllowDrop="True" CanDragItems="True" Grid.Row="2"
                          Padding="50,50,50,50">
            <GridView.ItemsPanel>
                <ItemsPanelTemplate>
                    <VariableSizedWrapGrid ItemHeight="150" ItemWidth="250" />
                </ItemsPanelTemplate>
            </GridView.ItemsPanel>
            <GridView.ItemTemplate>
                <DataTemplate>
                    <Grid Height="300" Width="500" RightTapped="Item_RightTapped" LostFocus="Item_Deselected" Background="{Binding ColorHex}">
                       <!-- <Grid.Background>
                            <ImageBrush ImageSource="{Binding Path=ImagePath, Converter={StaticResource ImageConverter}}" Stretch="UniformToFill" />
                        </Grid.Background> -->
                        <Image Source="{Binding Path=ImagePath, Converter={StaticResource ImageConverter}}" Stretch="UniformToFill" />
                        <StackPanel VerticalAlignment="Top">
                            <StackPanel.Background>
                                <SolidColorBrush Color="{Binding Path=ColorHex, Converter={StaticResource ColorConverter}}" Opacity="0.8" />
                            </StackPanel.Background>
                            <Image Width="40" Height="40" Source="Assets/folder.png" VerticalAlignment="Top" HorizontalAlignment="Left" Visibility="{Binding Path=isFolder, Converter={StaticResource BoolConverter}}"></Image>
                            <TextBlock FontSize="15" Margin="10">
                                <Run Text="{Binding Name}"/>
                            </TextBlock>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </GridView.ItemTemplate>
        </local:MyGridView>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
    <Page.BottomAppBar>
        <AppBar Loaded="AppBar_Loaded" Unloaded="AppBar_Unloaded">
            <StackPanel Orientation="Horizontal">
                <Button x:Name="EditButton" Click="EditButton_Click" Visibility="Collapsed" Style="{StaticResource EditAppBarButtonStyle}"/>
                <Button x:Name="EnlargeButton" Click="EnlargeButton_Click" Visibility="Collapsed" Style="{StaticResource LargerAppBarButtonStyle}"/>
                <Button x:Name="ShrinkButton" Click="ShrinkButton_Click" Visibility="Collapsed" Style="{StaticResource SmallerAppBarButtonStyle}"/>
                <Button x:Name="DeleteButton" Click="DeleteButton_Click" Visibility="Collapsed" Style="{StaticResource DeleteAppBarButtonStyle}"/>
            </StackPanel>
        </AppBar>
    </Page.BottomAppBar>
    <Page.TopAppBar>
        <AppBar>
            <StackPanel Orientation="Horizontal">
                <Button x:Name="AddButton" Click="AddButton_Click" Style="{StaticResource AddButtonAppBarButtonStyle}"/>
                <Button x:Name="AddCategory" Click="AddCategory_Click" Style="{StaticResource NewFolderAppBarButtonStyle}"/>
            </StackPanel>
        </AppBar>
    </Page.TopAppBar>
</common:LayoutAwarePage>